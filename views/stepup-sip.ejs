<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link rel="stylesheet" href="/styles/main.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>

    
    <%- include("header.ejs") %>
    

  <!-- calcluator -->
    <div class="container grid p-5">
        <div class="calculator">
            <h2 class="calcluatorName">Step Up SIP Calculator</h2>
            <form id="interestForm">
                <label for="principal">Monthly Investment:</label>
                <input type="number" id="principal" onchange="pRangeHandler(event),pInputHandler(event)" oninput="pInputHandler(event), calculate(event)" value="25000" name="principal" placeholder="Enter principal amount">
                <br/> <input type="range"  value="25000" oninput="pRangeHandler(event),pInputHandler(event)" onchange=" calculate(event)" id="rPrincipal " min="500" max="1000000" >
                <br><br>
                <label for="stepup">Annual step up (% per annum):</label>
                <input type="number" id="stepup" name="stepup" oninput="sInputHandler(event), calculate(event)" value="10" placeholder="Enter annual step up">
                <br/><input type="range" name="rStepup" value="10" oninput="sRangeHandler(event)" onchange=" calculate(event)"  id="stepup" min="1" max="30" >
                <br><br>
                <label for="rate">Rate of Interest (% per annum):</label>
                <input type="number" id="rate" name="rate" oninput="rInputHandler(event), calculate(event)" value="12" placeholder="Enter rate of interest">
                <br/><input type="range" name="rRate" value="12" oninput="rRangeHandler(event)" onchange=" calculate(event)"  id="rRate" min="1" max="30" >
                <br><br>
                <label for="time">Time (years):</label>
                <input type="number" id="time" name="time" oninput="tInputHandler(event),calculate(event)" value="10" placeholder="Enter time in years">
                <br/><input type="range" name="rTime" value="10" oninput="tRangeHandler(event)" onchange=" calculate(event)"  id="rTime" min="1" max="40" >
                <br><br>

                <div>-----------------------------------------------------------------------------------------------------------------------</div>
            
                <label for="A">Invested Amount : &#8377</label>
                <input readonly value="" class="result"  id="A" class="principal"/><br>

                <label for="B">Est. Return : &#8377</label>
                <input readonly value="" class="result" id="B" class="rate"/><br>

                <label for="C">Total value: &#8377</label>
                <input readonly value="" class="result" id="C" class="time"/>


              </form>


                <div class="chart" height="250" width="250">
                    <canvas id="myChart" width="250" height="250"></canvas>
                </div>
            

            <div class="container mt-5">
                <div class="info">
                     <h4> SIP Calculator - Systematic Investment Plan Calculator </h4> 
                        Prospective investors can think that SIPs and mutual funds are the same. However, SIPs are merely a method of investing in mutual funds, the other method being a lump sum. A SIP calculator is a tool that helps you determine the returns you can avail when parking your funds in such investment tools. Systematic Investment Plan or SIP is a process of investing a fixed sum of money in mutual funds at regular intervals. SIPs usually allow you to invest weekly, quarterly, or monthly.<br><br>
                </div> 
                <div class="info"> 
                    <h4>What is a SIP Calculator?</h4>
                    A SIP calculator is a simple tool that allows individuals to get an idea of the returns on their mutual fund investments made through SIP. SIP investments in mutual funds have become one of the most popular investment options for millennials lately.<br>
                    These mutual fund sip calculators are designed to give potential investors an estimate on their mutual fund investments. However, the actual returns offered by a mutual fund scheme varies depending on various factors. The SIP calculator does not provide clarification for the exit load and expense ratio (if any).<br>
                    This calculator will calculate the wealth gain and expected returns for your monthly SIP investment. Indeed, you get a rough estimate on the maturity amount for any of your monthly SIP, based on a projected annual return rate.<br><br>
                </div>
                <div class="info"> 
                    <h4>How can a SIP return calculator help you?</h4>
                    SIPs are a more lucrative mode of investing funds compared to a lump sum amount according to several mutual fund experts. It helps you become financially disciplined and create a habit of savings that can benefit you in the future.<br>
                    A SIP calculator online is a beneficial tool, which shows the estimated returns you will earn after the investment tenure.<br>
                    Few of the benefits of SIP calculators include -<br>
                    <ol>
                        <li>Assists you to determine the amount you want to invest in.</li>
                        <li>Tells you the total amount you have invested.</li>
                        <li>Gives an estimated value of the returns.</li>
                    </ol>
                </div> 
                <div class="info"> 
                    <h4>What is a SIP Calculator?</h4>
                    A SIP plan calculator works on the following formula -<br><br>
    
                    FV = P * (1 + r/n) ^ (n*t).<br><br>
    
                    In the above formula -<br>
                    <ul>
                        <li>M is the amount you receive upon maturity.</li>
                        <li>P is the amount you invest at regular intervals.</li>
                        <li>n is the number of payments you have made.</li>
                        <li>i is the periodic rate of interest.</li>
                    </ul><br>               
                    Take for example you want to invest Rs. 1,000 per month for 12 months at a periodic rate of interest of 12%.<br>
                    then the monthly rate of return will be 12%/12 = 1/100=0.01<br>
                    Hence, M = 1,000X ({[1 +0.01 ]^{12} - 1} / 0.01) x (1 + 0.01)<br>
                    which gives Rs 12,809 Rs approximately in a year.<br><br>
                    The rate of interest on a SIP will differ as per market conditions. It may increase or decrease, which will change the estimated returns.<br><br>
                </div>
                <div class="info"> 
                    <h4>How to use systematic investment plan calculator?</h4>
                    You can use the SIP amount calculator from  within a few clicks.<br>
                    Just enter the monthly invested amount (the amount for which you have started the SIP), the number of years for which you want to stay invested, and the expected rate of return.<br>
                    As soon as you input the value, the calculator will show you the estimated amount you can avail after your investment tenure is complete.<br><br>
                </div>
                <div class="info"> 
                    <h4>Advantages of using systematic investment plan calculator</h4>
                     offers the best SIP calculator, which provides the following advantages -<br>
                    <ul>
                        <li>Plan your investment based on the amount and tenure.</li>
                        <li>It helps you compute an estimation of the total value of investments at the end of your SIP tenure.</li>
                        <li>Shows accurate results and helps you save time required during a manual calculation.</li>
                        <li>A systematic investment plan calculator ensures that your savings portfolio is as per your requirements and financial needs.</li>
                    </ul>
                </div>
            </div>
        </div>

        <div class=" calculatorList col-md-4 col-xl-3 mb-3"> <!-- added class for width -->
            <h5 >Other Calculators</h5>
            <ul class="nav flex-column">
              <li class="nav-item mb-2 pt-4"><a href="#" class="nav-link p-0 text-body-secondary">EMI Calculator</a></li>
              <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">PPF Calculator</a></li>
              <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">EPF Calculator</a></li>
              <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">GST Calculator</a></li>
              <li class="nav-item mb-2"><a href="#" class="nav-link p-0 text-body-secondary">SWP Calculator</a></li>
            </ul>
          </div>

    </div>

    <%- include("footer.ejs") %>

    <script type="module" src="acquisitions.js"></script>
  <script>
    // Data
   // Data
let amt = 100;
let rate = 5;
let stepup = 10;
let time = 10;
let M 
let totalAmount


let p = document.querySelector("#principal");
p.addEventListener('change', (event) => {
  amt = event.target.value;
});

let r = document.querySelector("#rate");
r.addEventListener('change', (event) => {
  rate = event.target.value;
});

let s = document.querySelector("#stepup");
s.addEventListener('change', (event) => {
  stepup = event.target.value;
});

let t = document.querySelector("#time");
t.addEventListener('change', (event) => {
  time = event.target.value;
});

let pRange = document.querySelector("#rPrincipal")
let rRange = document.querySelector("#rRate") 
let sRange = document.querySelector("#rStepup") 
let tRange = document.querySelector("#rTime")

let investedAmt = document.querySelector("#A")
let estRet = document.querySelector("#B") 
let totalValue = document.querySelector("#C")



function pRangeHandler(event){
  p.value = event.target.value;
}
function rRangeHandler(event){
  r.value = event.target.value;
}
function sRangeHandler(event){
  s.value = event.target.value;
}
function tRangeHandler(event){
  t.value = event.target.value;
}


function pInputHandler(event){
  pRange.value = event.target.value;
}
function rInputHandler(event){
  rRange.value = event.target.value;
}
function sInputHandler(event){
  sRange.value = event.target.value;
}
function tInputHandler(event){
  tRange.value = event.target.value;
}


  amt = p.value;
  rate = r.value;
  stepup = s.value;
  time = t.value;

  amt = parseFloat(amt);
  rate = parseFloat(rate);
  stepup = parseFloat(stepup);
  time = parseFloat(time);
  
  let i = rate / 1200;
 
  //P × ({[1 + i]^n - 1} / i) × (1 + i)
  //FV = P * (1 + r/n) ^ (n*t)

  let n = time*12;
  let a = Math.pow(( amt * (1 + rate/stepup) ),( stepup*time ));
  M = amt*(a/i)*(1+i);
  totalAmount = amt*n;

  let investedamount = (Math.round(amt*12*time));
  let estReturns = (Math.round(M-totalAmount));

  investedAmt.value = (investedamount).toLocaleString('en-in')
  estRet.value = (estReturns).toLocaleString('en-in')
  totalValue.value = (Math.round(parseFloat(investedamount) + parseFloat(estReturns))).toLocaleString('en-in');
  

function updateChart() {
  console.log(amt,stepup,rate,time)
  const newData = {
    labels: ['est. ret', 'principal amount'],
    datasets: [{
      label: 'My Doughnut Chart',
      data: [M-totalAmount, totalAmount],
      backgroundColor: [
        'rgb(50, 50, 50)' ,
        'rgb(200, 200, 200)'
      ],
      borderWidth: 1
    }]
  };

  myChart.data = newData; 
  myChart.update(); 
}


function calculate() {
  event.preventDefault();

  amt = p.value;
  rate = r.value;
  time = t.value;
  stepup = s.value;

  amt = parseFloat(amt);
  rate = parseFloat(rate);
  time = parseFloat(time);
  stepup = parseFloat(stepup);
  
  let i = rate / 1200;

  //P × ({[1 + i]^n - 1} / i) × (1 + i)
  let n = time*12;
 let a = Math.pow((1+i),(n))-1;
  M = amt*(a/i)*(1+i);
   totalAmount = amt*n;

  let investedamount = (Math.round(amt*12*time));
  let estReturns = (Math.round(M-totalAmount));

  investedAmt.value = (investedamount).toLocaleString('en-in')
  estRet.value = (estReturns).toLocaleString('en-in')
  totalValue.value = (Math.round(parseFloat(investedamount) + parseFloat(estReturns))).toLocaleString('en-in');
  updateChart();
}


const data = {
  labels: ['est. ret', 'principal amount'],
  datasets: [{
    label: 'My Doughnut Chart',
    data: [M-totalAmount, totalAmount],
    backgroundColor: [
      'rgb(200, 200, 200)', 
      'rgb(50, 50, 50)' 
    ],
    borderWidth: 1
  }]
};

const config = {
  type: 'doughnut',
  data: data,
  options: {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
      }
    }
  }
};


var myChart = new Chart(
  document.getElementById('myChart'),
  config
);
  </script>
</body>
</html>