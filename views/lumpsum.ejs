<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link rel="stylesheet" href="/styles/main.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>

    
  <!-- Title -->
  <%- include("header.ejs") %>
                                                                                          
  <!-- calcluator -->
    <div class="container grid p-5">
        <div class="calculator">
            <h2 class="calcluatorName">Lumpsum Calculator</h2>
            <form id="interestForm">
                <label for="principal">Principal Amount:</label>
                <input type="number" id="principal" oninput="pInputHandler(event), calculate(event)" value="25000" name="principal" placeholder="Enter principal amount">
                <br/> <input type="range"  value="25000" oninput="pRangeHandler(event)" onchange=" calculate(event)" id="principal " min="500" max="1000000" >
                <br><br>
                <label for="rate">Rate of Interest (% per annum):</label>
                <input type="number" id="rate" name="rate" oninput="rInputHandler(event), calculate(event)" value="12" placeholder="Enter rate of interest">
                <br/><input type="range" name="rRate" value="12" oninput="rRangeHandler(event)" onchange=" calculate(event)"  id="rRate" min="1" max="30" >
                <br><br>
                <label for="time">Time (years):</label>
                <input type="number" id="time" name="time" oninput="tInputHandler(event),calculate(event)" value="10" placeholder="Enter time in years">
                <br/><input type="range" name="rTime" value="10" oninput="tRangeHandler(event)" onchange=" calculate(event)"  id="rTime" min="1" max="40" >
                <br><br><hr>
                <div class="output">
                  <label for="A">Invested Amount : &#8377</label>
                  <input readonly value="" class="result"  id="A" class="principal"/><br>
                  <br>
                  <label for="B">Estimated Return : &#8377</label>
                  <input readonly value="" class="result" id="B" class="rate"/><br>
                  <br>
                  <label for="C">Total value : &#8377</label>
                  <input readonly value="" class="result" id="C" class="time"/>
                </div>

              </form>


                <div class="chart" height="250" width="250">
                    <canvas id="myChart" width="250" height="250"></canvas>
                </div>
            

            <div class="container mt-5">
                <div class="info">
                     <h4> LUMPSUM Calculator  </h4> 
                     Investments in Mutual Funds can be broadly classified into two types- lumpsum and SIP. A lumpsum investment is when the depositor invests a significant sum of money on a particular mutual fund scheme. SIP or Systematic Investment Plan, on the other hand, entails the investment of smaller amounts on a monthly basis.

                     Both these type of mutual fund investment strategies have their fair share of benefits. Lumpsum investments are particularly preferred by a majority of investors, as there are lesser variables involved and returns are generally on the higher side. To find out the estimated returns on your lumpsum mutual fund investment, you may use a mutual fund lumpsum calculator available online.<br><br>
                </div> 
                <div class="info"> 
                    <h4>How can a Lump sum Calculator Help You?</h4>
                    <p>Mutual fund investors can use this calculator to figure out the estimated returns on their investments. Before getting into the benefits of using this calculator, one must know the types of return for a lumpsum investment</p>
                    <ul><li>Absolute return</li>
                    <li>Total return</li>
                    <li>Annualised return</li>
                    <li>Point to point return</li>
                    <li>Trailing return
                      </li>
                    <li>
                      Rolling return</li></ul>
                      <p>It’s paramount that an investor understands all these types of returns in details to avail the maximum benefits from their mutual fund investments. 

                        Now that you are familiar with the type of returns, it’s time to delve into the benefits of using a lumpsum return calculator:</p>
                        <ul>
                          <li>This calculator provides you with the estimated returns for the whole investment period. You may calculate your investments’ 1-year, 3-year and 5-year returns using this calculator</li>
                          <li>It’s incredibly convenient and easy to use. Even a layperson can use this calculator with relative ease.</li>
                          <li>It offers a reasonably accurate estimate. Note that mutual fund investments are subject to market risks, and cannot be predicted with pinpoint accuracy.</li>
                          <li>An Lumpsum Calculator enables an investor to plan his/her finances better based on the estimated return they are most likely to receive at the end of their investment period</li>
                        </ul>
                  <br><br>
                </div>
                <div class="info"> 
                    <h4>Formula to Calculate MF returns</h4>
                    <p>The formula is as follows:
                      <br>
                      <b>A = P (1 + r/n) ^ nt</b>
                      <br>
                      The variables are mentioned in the table below.</p><br>
                    <ul>
                        <li>A : Estimated return</li>
                        <li>P : Present Value</li>
                        <li>r : Rate of return</li>
                        <li>t : Duration of investment</li>
                        <li>n : Number of compounded interests in a year</li>
                    </ul>
                    <br><br>
                    <p>You can use this formula to compute your mutual funds returns accurately. For example, imagine investing Rs. 15 Lakh in a fund with a 12% return for 5-year period compounding every 6 months.
                      <br>
                      The estimated return in this scenario will be-
                      <br><br>
                      A = Rs. 15, 00,000 (1 + 12%) ^ 5
                      
                      As you can surmise, it’s a complex equation which may be out of grasp for a majority of investors. A lumpsum MF calculator will calculate it instantly. In this case, your estimated return at the end of a 5-year period shall be Rs. 26, 43, 513.
                    <br><br></p>
                </div> 
                <div class="info"> 
                    <h4>How to use lumpsum calculator?</h4>
                    <p>The lumpsum calculator available on the Groww website is easily navigable. Follow the steps mentioned below to calculate your ROI on mutual funds:</p>
                    <ul>
                      <li>Provide required variables at their designated slots. You may also use the slider to adjust values.</li>
                      <li>The calculator will provide you with an estimated value in seconds.</li>
                    </ul><br><br>
    
                </div>
                
                <div class="info"> 
                    <h4>Advantages of using Lumpsum Calculator</h4>
                     <p>A mutual fund lumpsum calculator is an incredibly convenient financial tool which comes with a host of benefits.</p>
                    <ul>
                        <li>Returns on mutual fund investments cannot be calculated accurately as they are subjected to market risks. A calculator provides you with the closest possible estimate.</li>
                        <li>It is an online tool, implying that you can use it at any time from any place. It eliminates time and space constraints</li>
                        <li>It saves your time and effort, as these calculations can take several minutes. Doing calculations manually for more than one variation can take hours.</li>
                        
                    </ul>
                </div>
            </div>
        </div>

        

        <div class=" calculatorList col-md-4 col-xl-3 mb-3"> <!-- added class for width -->
          <h5 >Other Calculators</h5>
          <ul class="nav flex-column">
            <li class="nav-item mb-2 pt-4"><a href="./stepup-sip" class="nav-link p-0 text-body-secondary">Step Up SIP Calculator</a></li>
            <li class="nav-item mb-2"><a href="./ppf" class="nav-link p-0 text-body-secondary">PPF Calculator</a></li>
            <li class="nav-item mb-2"><a href="./ssy" class="nav-link p-0 text-body-secondary">SSY Calculator</a></li>
            <li class="nav-item mb-2"><a href="./gst" class="nav-link p-0 text-body-secondary">GST Calculator</a></li>
            <li class="nav-item mb-2"><a href="./lumpsum" class="nav-link p-0 text-body-secondary">Lumpsum Calculator</a></li>
          </ul>
        </div>

  </div>

    
    <%- include("footer.ejs")%>
<<<<<<< HEAD

=======
    
>>>>>>> eadea164044fdc1ba5240f024c5230928f6becb9
    <script type="module" src="acquisitions.js"></script>
  <script>
    // Data
   // Data
let amt = 100;
let rate = 5;
let time = 10;
let M 
let totalAmount


let p = document.querySelector("#principal");
p.addEventListener('change', (event) => {
  amt = event.target.value;
});

let r = document.querySelector("#rate");
r.addEventListener('change', (event) => {
  rate = event.target.value;
});

let t = document.querySelector("#time");
t.addEventListener('change', (event) => {
  time = event.target.value;
});

let pRange = document.querySelector("#rPrincipal")
let rRange = document.querySelector("#rRate") 
let tRange = document.querySelector("#rTime")

let investedAmt = document.querySelector("#A")
let estRet = document.querySelector("#B") 
let totalValue = document.querySelector("#C")



function pRangeHandler(event){
  p.value = event.target.value;
}
function rRangeHandler(event){
  r.value = event.target.value;
}
function tRangeHandler(event){
  t.value = event.target.value;
}


function pInputHandler(event){
  pRange.value = event.target.value;
}
function rInputHandler(event){
  rRange.value = event.target.value;
}
function tInputHandler(event){
  t.value = event.target.value;
}


amt = p.value;
  rate = r.value;
  time = t.value;

  amt = parseFloat(amt);
  rate = parseFloat(rate);
  time = parseFloat(time);
  
  let i = rate / 100;
  console.log(amt,rate,time);
  //P × ({[1 + i]^n - 1} / i) × (1 + i)
  let n = time;  
 let a = Math.pow((1+i),(time));
  M = amt*a;
   totalAmount = amt;

  let investedamount = (Math.round(amt));
  let estReturns = (Math.round(M-totalAmount));

  investedAmt.value = (investedamount).toLocaleString('en-in')
  estRet.value = (estReturns).toLocaleString('en-in')
  totalValue.value = (Math.round(parseFloat(investedamount) + parseFloat(estReturns))).toLocaleString('en-in');
  

function updateChart() {
  const newData = {
    labels: ['est. ret', 'principal amount'],
    datasets: [{
      label: 'My Doughnut Chart',
      data: [M-totalAmount, totalAmount],
      backgroundColor: [
        'rgb(50, 50, 50)' ,
        'rgb(200, 200, 200)'
      ],
      borderWidth: 1
    }]
  };

  myChart.data = newData; 
  myChart.update(); 
}


function calculate() {
  event.preventDefault();
  console.log("workingg",r.value,t.value,amt);
  amt = p.value;
  rate = r.value;
  time = t.value;

  amt = parseFloat(amt);
  rate = parseFloat(rate);
  time = parseFloat(time);
  
  let i = rate / 100;
  console.log(amt,rate,time);
  //P × ({[1 + i]^n - 1} / i) × (1 + i)
  let n = time;  
 let a = Math.pow((1+i),(time));
  M = amt*a;
   totalAmount = amt;

  let investedamount = (Math.round(amt));
  let estReturns = (Math.round(M-totalAmount));

  investedAmt.value = (investedamount).toLocaleString('en-in')
  estRet.value = (estReturns).toLocaleString('en-in')
  totalValue.value = (Math.round(parseFloat(investedamount) + parseFloat(estReturns))).toLocaleString('en-in');
  updateChart();
}


const data = {
  labels: ['est. ret', 'principal amount'],
  datasets: [{
    label: 'My Doughnut Chart',
    data: [M-totalAmount, totalAmount],
    backgroundColor: [
      'rgb(200, 200, 200)', 
      'rgb(50, 50, 50)' 
    ],
    borderWidth: 1
  }]
};

const config = {
  type: 'doughnut',
  data: data,
  options: {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
      }
    }
  }
};


var myChart = new Chart(
  document.getElementById('myChart'),
  config
);
  </script>
</body>
</html>